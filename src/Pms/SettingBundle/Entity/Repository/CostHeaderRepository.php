<?php

namespace Pms\SettingBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * CostHeaderRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CostHeaderRepository extends EntityRepository
{
    public function getAll()
    {
        return $this->findAll();
    }

    public function create($data)
    {
        $this->_em->persist($data);
        $this->_em->flush();
    }

    public function delete($data)
    {
        $this->_em->remove($data);
        $this->_em->flush();
    }

    public function update($data)
    {
        $this->_em->persist($data);
        $this->_em->flush();
        return $this->_em;
    }

    public function getCostHeaders($subCategoryId)
    {
        $query = $this->createQueryBuilder('ch');
        $query->select('ch.id');
        $query->addSelect('ch.title');
        $query->where('ch.subCategory = ?1');
        $query->andWhere('ch.status = 1');
        $query->setParameter('1', $subCategoryId);

        return $query->getQuery()->getResult();
    }

    public function getCostHeaderSearch($status, $returnQuery = true)
    {
        $query = $this->createQueryBuilder('ch');
        $query->orderBy('ch.title', 'asc');

        $this->handleActiveTypeFilter($status, $query);

        $this->handleDeleteTypeFilter($status, $query);

        if ($returnQuery) {
            return $query;
        }

        return $query->getQuery()->getResult();
    }

    /**
     * @param $status
     * @param $query
     */
    protected function handleActiveTypeFilter($status, $query)
    {
        if ($status == 'active') {
            $query->andWhere('ch.status = :status');
            $query->setParameter('status', 1);
        }
    }

    /**
     * @param $status
     * @param $query
     */
    protected function handleDeleteTypeFilter($status, $query)
    {
        if ($status == 'delete') {
            $query->andWhere('ch.status = :status');
            $query->setParameter('status', 0);
        }
    }
}
