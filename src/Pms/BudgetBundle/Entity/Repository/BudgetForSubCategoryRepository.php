<?php

namespace Pms\BudgetBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * BudgetForSubCategoryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BudgetForSubCategoryRepository extends EntityRepository
{
    public function getAll()
    {
        return $this->findAll();
    }

    public function create($data)
    {
        $this->_em->persist($data);
        $this->_em->flush();
    }

    public function delete($data)
    {
        $this->_em->remove($data);
        $this->_em->flush();
    }

    public function update($data)
    {
        $this->_em->persist($data);
        $this->_em->flush();
        return $this->_em;
    }

    public function getBudgetVsSpendReport($data)
    {
        $query = $this->createQueryBuilder('bs');
        $query->join('bs.budget', 'b');
        $query->join('bs.subCategory', 'sc');

        $query->select('SUM(bs.amount) as budgetAmountForSubCategory');
        $query->addSelect('sc.subCategoryName');
        $query->addSelect('sc.id as subCategoryID');

        $query->where('b.month =(:month)');
        $query->setParameter('month', $data['month']);
        $query->andWhere('b.approveStatus = 3');

        $query->groupBy('bs.subCategory');
        $query->orderBy('sc.subCategoryName', 'ASC');

        return $query->getQuery()->getResult();
    }

    public function getBudgetVsSpendSubCategoryWiseSingle($subCategoryID, $month)
    {
        $query = $this->createQueryBuilder('bs');
        $query->join('bs.budget', 'b');
        $query->join('bs.subCategory', 'sc');
        $query->join('b.project', 'p');

        $query->select('SUM(bs.amount) as budgetAmountForSubCategory');
        $query->addSelect('sc.subCategoryName');
        $query->addSelect('sc.id as subCategoryID');
        $query->addSelect('p.projectName');
        $query->addSelect('p.id as PID');

        $query->where('b.month =:month');
        $query->setParameter('month', $month);
        $query->andWhere('b.approveStatus = 3');
        $query->andWhere('sc.id = :subCategoryID');
        $query->setParameter('subCategoryID', $subCategoryID);

        $query->groupBy('p.id', 'sc.id');
        $query->orderBy('sc.subCategoryName', 'ASC');

        return $query->getQuery()->getResult();
    }

    public function getBudgetTotalForPrFormMSG($month, $project, $subCategory)
    {
        $month = strtotime($month);
        $month = date('Y-m-d',$month);

        $query = $this->createQueryBuilder('bs');
        $query->join('bs.budget', 'b');
        $query->select('bs.amount');
        $query->where('b.status = 1');
        $query->andWhere('b.month = :month');
        $query->andWhere('b.project = :project');
        $query->andWhere('bs.subCategory = :subCategory');
        $query->andWhere('b.approveStatus = 3');
        $query->setParameter('month', $month);
        $query->setParameter('project', $project);
        $query->setParameter('subCategory', $subCategory);

        return $query->getQuery()->getResult();
    }
}
